.hljs {
  padding: 1em;
}

blockquote {
    margin: 1em 0;
    padding: 0 2em;
    border-left: 3px solid #ddd;
    font-family: KaiTi, '楷体', '楷体_GB2312', serif; /* 设置楷体字体 */
}

/* ---------首页自定义样式--------- */
/* 定义 CSS 变量，便于统一管理和修改主题样式 */
:root {
  --primary-text-color: #222; /* 主要文字颜色 */
  --secondary-text-color: #666; /* 次要文字颜色，用于落款等 */
  --container-bg-color: rgba(255, 255, 255, 0.85); /* 诗词容器背景色 */
  --container-border-color: #ccc; /* 诗词容器边框颜色 */
  --container-shadow-color: rgba(0, 0, 0, 0.15); /* 诗词容器阴影颜色 */
  --border-radius-large: 12px; /* 大圆角 */
  --spacing-medium: 2em; /* 中等内边距 */
  --spacing-large: 3em; /* 大外边距 */
  --font-poem: "KaiTi", "楷体", "STKaiti", "KaiTi_GB2312", serif; /* 诗词主字体，首选楷体 */
  --font-base: 'Inter', sans-serif; /* 基础字体，可用于网站其他部分 */
  --poem-font-size-desktop: 1.25rem; /* 桌面端诗词字体大小 */
  --poem-line-height-desktop: 1.7; /* 桌面端诗词行高 */
  --poem-font-size-mobile: 1.1rem; /* 手机端诗词字体大小 */
  --poem-line-height-mobile: 1.6; /* 手机端诗词行高 */
  --petal-width: 15px;  /* 定义花瓣宽度变量 */
  --petal-height: 20px; /* 定义花瓣高度变量 */
}

body {
  font-family: var(--font-base); /* 应用基础字体 */
}

/* 诗词容器样式 */
.poem-container {
  max-width: 700px;
  margin: var(--spacing-large) auto;
  padding: var(--spacing-medium) var(--spacing-large);
  background: var(--container-bg-color);
  border: 1.5px solid var(--container-border-color);
  border-radius: var(--border-radius-large);
  box-shadow: 0 6px 15px var(--container-shadow-color);
  font-family: var(--font-poem); /* 应用诗词字体 */
  font-size: var(--poem-font-size-desktop);
  line-height: var(--poem-line-height-desktop);
  color: var(--primary-text-color);
  position: relative;
  animation: fadeInText 3s ease forwards;
  /* 添加背景模糊效果，提升技术感和美感 */
  backdrop-filter: blur(8px); /* 模糊度可调整 */
  -webkit-backdrop-filter: blur(8px); /* 兼容 Safari */
}

/* 诗词落款样式 */
.poem-container .author-signature {
  display: block; /* 让落款单独占一行 */
  text-align: right; /* 右对齐 */
  margin-top: 1.5em; /* 与诗词内容保持距离 */
  font-size: 0.9em; /* 相对诗词内容小一点 */
  color: var(--secondary-text-color); /* 颜色稍淡 */
  font-style: normal; /* 确保不倾斜，如果字体自带斜体效果则不需要 */
  letter-spacing: 0.05em; /* 稍微增加字间距，提升美感 */
}

/* 竖排诗词容器 (如果需要，保持原有样式并更新变量) */
.poem-icontainer {
  writing-mode: vertical-rl;
  text-orientation: upright;
  font-family: var(--font-poem);
  font-size: 1.7rem; /* 竖排字体可适当大一些 */
  line-height: 2.2;
  color: var(--primary-text-color);
  max-width: 85vw;
  margin: var(--spacing-large) auto;
  padding: var(--spacing-medium);
  background: rgba(255, 255, 255, 0.75); /* 竖排容器背景可稍透明 */
  border: 1px solid var(--container-border-color);
  border-radius: var(--border-radius-large);
  box-shadow: 0 6px 20px var(--container-shadow-color);
  animation: fadeInText 3s ease forwards;
  backdrop-filter: blur(6px); /* 竖排容器也可以有模糊效果 */
  -webkit-backdrop-filter: blur(6px);
}

/* 渐显动画 */
@keyframes fadeInText {
  0% { opacity: 0; transform: translateY(20px);}
  100% { opacity: 1; transform: translateY(0);}
}

/* 背景水墨画统一样式 */
.poem-bg {
  position: fixed;
  top: 0; left: 0; right: 0; bottom: 0;
  background: no-repeat center center;
  background-size: cover;
  /* background-attachment: fixed; /* 移除此行，由JS实现视差滚动 */
  filter: grayscale(100%) contrast(0.85) brightness(0.95);
  opacity: 0.22;
  z-index: -1;
  /* 开启硬件加速，为JS视差滚动做准备 */
  transform: translate3d(0, 0, 0);
  /* 添加一个轻微的过渡，让视差滚动更平滑 */
  transition: transform 0.1s ease-out;
}

/* 媒体查询保持不变，加载不同尺寸背景图 */
/* PC桌面版 */
@media (min-width: 1025px) {
  .poem-bg {
    background-image: url('/img/sushi-desktop.png');
  }
}

/* 平板版 */
@media (min-width: 768px) and (max-width: 1024px) {
  .poem-bg {
    background-image: url('/img/sushi-tablet.png');
  }
}

/* 手机版 */
@media (max-width: 767px) {
  .poem-bg {
    background-image: url('/img/sushi-mobile.png');
    font-size: var(--poem-font-size-mobile); /* 手机端字体调整 */
    line-height: var(--poem-line-height-mobile); /* 手机端行高调整 */
    padding: 1.5em 2em; /* 手机端内边距调整 */
  }
  .poem-container {
    padding: 1.5em 2em; /* 手机端内边距调整 */
    font-size: var(--poem-font-size-mobile);
    line-height: var(--poem-line-height-mobile);
  }
}


/* === 新增：效果层的基础样式 === */
.effect-layer {
  position: fixed; /* 固定在视口 */
  top: 0;
  left: 0;
  width: 100vw; /* 占据整个视口宽度 */
  height: 100vh; /* 占据整个视口高度 */
  pointer-events: none; /* 关键：允许点击事件穿透这些层，点击背景或下层元素 */
  z-index: 0; /* 默认层级，低于诗词容器 */
}

/* 为水波和花瓣容器设置不同的 z-index，确保它们在背景之上，但可以在诗词容器之下或之上 */
#rippleCanvas {
  z-index: 0; /* 在背景图之上，在花瓣和诗词容器之下 */
}

#petalContainer {
  z-index: 1; /* 在水波之上，在诗词容器之下 */
}

/* === 新增：花瓣的样式和动画 === */
.petal {
  position: absolute; /* 相对于 petalContainer 定位 */
  background-color: rgba(255, 200, 220, 0.7); /* 默认半透明粉色花瓣 */
  width: var(--petal-width);  /* 比如 15px */
  height: var(--petal-height); /* 比如 20px */
  border-radius: 40% 60% 70% 30% / 60% 40% 60% 40%; /* 尝试这种不规则的椭圆 */
  opacity: 0; /* 初始透明 */
  pointer-events: none; /* 花瓣不影响点击 */
  /* 这里 animation 名称和 timing function 会被 JS 动态设置 */
}

/* 花瓣飘落的核心动画 */
@keyframes fall {
  0% {
    transform: translateY(-10vh) rotate(0deg); /* 从屏幕上方开始，初始旋转 */
    opacity: 0; /* 初始完全透明 */
  }
  10% {
    opacity: 1; /* 快速显现 */
  }
  90% {
    opacity: 1; /* 保持可见 */
  }
  100% {
    transform: translateY(100vh) rotate(720deg); /* 飘落到屏幕下方，完成旋转 */
    opacity: 0; /* 最终再次透明 */
  }
}













